Traceback (most recent call last):
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1107, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 852, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/arthurturrell/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from dagster import execute_pipeline, pipeline, solid


@solid
def get_name(_):
    return 'dagster'


@solid
def hello(context, name: str):
    return 'hello, {name}!'.format(name=name)


@solid
def leading_caps(context, phrase: str):
    return phrase.title()


@solid
def all_upper(context, phrase: str):
    return phrase.upper()


@solid
def display(context, phrase_to_display: str):
    print(phrase_to_display)


@pipeline
def hello_pipeline():
    hello_text = hello(get_name())
    display(leading_caps(hello_text))
    display(all_upper(hello_text))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mDagsterInvalidDefinitionError[0m             Traceback (most recent call last)
[0;32m<ipython-input-18-c7a5432a9a22>[0m in [0;36m<module>[0;34m[0m
[1;32m     28[0m [0;34m[0m[0m
[1;32m     29[0m [0;34m@[0m[0mpipeline[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 30[0;31m [0;32mdef[0m [0mhello_pipeline[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     31[0m     [0mhello_text[0m [0;34m=[0m [0mhello[0m[0;34m([0m[0mget_name[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     32[0m     [0mdisplay[0m[0;34m([0m[0mleading_caps[0m[0;34m([0m[0mhello_text[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/dagster/core/definitions/decorators.py[0m in [0;36mpipeline[0;34m(name, description, mode_defs, preset_defs)[0m
[1;32m    794[0m     [0;32mif[0m [0mcallable[0m[0;34m([0m[0mname[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    795[0m         [0mcheck[0m[0;34m.[0m[0minvariant[0m[0;34m([0m[0mdescription[0m [0;32mis[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 796[0;31m         [0;32mreturn[0m [0m_Pipeline[0m[0;34m([0m[0;34m)[0m[0;34m([0m[0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    797[0m [0;34m[0m[0m
[1;32m    798[0m     return _Pipeline(

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/dagster/core/definitions/decorators.py[0m in [0;36m__call__[0;34m(self, fn)[0m
[1;32m    740[0m         [0menter_composition[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mname[0m[0;34m,[0m [0;34m'@pipeline'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    741[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 742[0;31m             [0mfn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    743[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    744[0m             [0mcontext[0m [0;34m=[0m [0mexit_composition[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-18-c7a5432a9a22>[0m in [0;36mhello_pipeline[0;34m()[0m
[1;32m     31[0m     [0mhello_text[0m [0;34m=[0m [0mhello[0m[0;34m([0m[0mget_name[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     32[0m     [0mdisplay[0m[0;34m([0m[0mleading_caps[0m[0;34m([0m[0mhello_text[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 33[0;31m     [0mdisplay[0m[0;34m([0m[0mall_upper[0m[0;34m([0m[0mhello_text[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/dagster/core/definitions/solid.py[0m in [0;36m__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    104[0m         [0;32mfrom[0m [0;34m.[0m[0mcomposition[0m [0;32mimport[0m [0mCallableSolidNode[0m[0;34m[0m[0;34m[0m[0m
[1;32m    105[0m [0;34m[0m[0m
[0;32m--> 106[0;31m         [0;32mreturn[0m [0mCallableSolidNode[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    107[0m [0;34m[0m[0m
[1;32m    108[0m     [0;32mdef[0m [0malias[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/dagster/core/definitions/composition.py[0m in [0;36m__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    155[0m [0;34m[0m[0m
[1;32m    156[0m         [0;32mif[0m [0mcurrent_context[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mhas_seen_invocation[0m[0;34m([0m[0mself[0m[0;34m.[0m[0msolid_name[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 157[0;31m             raise DagsterInvalidDefinitionError(
[0m[1;32m    158[0m                 '{source} {name} invoked the same solid ({solid_name}) twice without aliasing.'.format(
[1;32m    159[0m                     [0msource[0m[0;34m=[0m[0mcurrent_context[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0msource[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;31mDagsterInvalidDefinitionError[0m: @pipeline hello_pipeline invoked the same solid (display) twice without aliasing.
DagsterInvalidDefinitionError: @pipeline hello_pipeline invoked the same solid (display) twice without aliasing.

