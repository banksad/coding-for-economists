Traceback (most recent call last):
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests

url = 'https://api.ons.gov.uk/timeseries/UNEM/dataset/JP9Z/data'

# Get the data from the ONS API:
json_data = requests.get(url).json()

# Prep the data for a quick plot
title = json_data['description']['title']
df = (pd.DataFrame(pd.io.json.json_normalize(json_data['months']))
        .assign(date=lambda x: pd.to_datetime(x['date']),
                value=lambda x: pd.to_numeric(x['value']))
        .set_index('date'))

df['value'].plot(title=title, ylim=(0, df['value'].max()*1.2), lw=3.);
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mJSONDecodeError[0m                           Traceback (most recent call last)
[0;32m<ipython-input-3-00d3cdf2f8b6>[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;31m# Get the data from the ONS API:[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0mjson_data[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mget[0m[0;34m([0m[0murl[0m[0;34m)[0m[0;34m.[0m[0mjson[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0;34m[0m[0m
[1;32m      8[0m [0;31m# Prep the data for a quick plot[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/models.py[0m in [0;36mjson[0;34m(self, **kwargs)[0m
[1;32m    898[0m                     [0;31m# used.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    899[0m                     [0;32mpass[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 900[0;31m         [0;32mreturn[0m [0mcomplexjson[0m[0;34m.[0m[0mloads[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mtext[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    901[0m [0;34m[0m[0m
[1;32m    902[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/json/__init__.py[0m in [0;36mloads[0;34m(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)[0m
[1;32m    355[0m             [0mparse_int[0m [0;32mis[0m [0;32mNone[0m [0;32mand[0m [0mparse_float[0m [0;32mis[0m [0;32mNone[0m [0;32mand[0m[0;34m[0m[0;34m[0m[0m
[1;32m    356[0m             parse_constant is None and object_pairs_hook is None and not kw):
[0;32m--> 357[0;31m         [0;32mreturn[0m [0m_default_decoder[0m[0;34m.[0m[0mdecode[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    358[0m     [0;32mif[0m [0mcls[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    359[0m         [0mcls[0m [0;34m=[0m [0mJSONDecoder[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/json/decoder.py[0m in [0;36mdecode[0;34m(self, s, _w)[0m
[1;32m    335[0m [0;34m[0m[0m
[1;32m    336[0m         """
[0;32m--> 337[0;31m         [0mobj[0m[0;34m,[0m [0mend[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mraw_decode[0m[0;34m([0m[0ms[0m[0;34m,[0m [0midx[0m[0;34m=[0m[0m_w[0m[0;34m([0m[0ms[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m.[0m[0mend[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    338[0m         [0mend[0m [0;34m=[0m [0m_w[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mend[0m[0;34m)[0m[0;34m.[0m[0mend[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    339[0m         [0;32mif[0m [0mend[0m [0;34m!=[0m [0mlen[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/codeforecon/lib/python3.8/json/decoder.py[0m in [0;36mraw_decode[0;34m(self, s, idx)[0m
[1;32m    353[0m             [0mobj[0m[0;34m,[0m [0mend[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mscan_once[0m[0;34m([0m[0ms[0m[0;34m,[0m [0midx[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    354[0m         [0;32mexcept[0m [0mStopIteration[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 355[0;31m             [0;32mraise[0m [0mJSONDecodeError[0m[0;34m([0m[0;34m"Expecting value"[0m[0;34m,[0m [0ms[0m[0;34m,[0m [0merr[0m[0;34m.[0m[0mvalue[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    356[0m         [0;32mreturn[0m [0mobj[0m[0;34m,[0m [0mend[0m[0;34m[0m[0;34m[0m[0m

[0;31mJSONDecodeError[0m: Expecting value: line 1 column 1 (char 0)
JSONDecodeError: Expecting value: line 1 column 1 (char 0)

