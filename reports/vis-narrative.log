Traceback (most recent call last):
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/aet/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fade_alpha = 0.7

# Create the column we wish to plot
title = "Log of Google Trends Index"
df[title] = np.log(df["hits"])
df = df.dropna(subset=[title])

# Make a plot
fig, ax = plt.subplots()

# Add lines to it
sns.lineplot(
    ax=ax,
    data=df,
    x="date",
    y=title,
    hue="name",
    palette="deep",
    legend=None,
    hue_order=df["name"].unique(),
    alpha=fade_alpha,
)
# Add the text--for each line, find the end, annotate it with a label, and
# adjust the chart axes so that everything fits on.
for line, name in zip(ax.lines, df["name"].unique()):
    y = line.get_ydata()[-1]  # NB: to use start value, set [-1] to [0] instead
    x = line.get_xdata()[-1]
    if not np.isfinite(y):
        y = next(reversed(line.get_ydata()[~line.get_ydata().mask]), float("nan"))
    if not np.isfinite(y) or not np.isfinite(x):
        continue
    text = ax.annotate(
        name,
        xy=(x, y),
        xytext=(2, -2),
        color=line.get_color(),
        xycoords=(ax.get_xaxis_transform(), ax.get_yaxis_transform()),
        textcoords="offset points",
        fontweight="bold",
    )
    text_width = (
        text.get_window_extent(fig.canvas.get_renderer())
        .transformed(ax.transData.inverted())
        .width
    )
    if np.isfinite(text_width):
        ax.set_xlim(ax.get_xlim()[0], text.xy[0] + text_width * 1.05)

# Title that gives the narrative
plt.suptitle(
    "Economics overtakes other STEM subjects in searches",
    size=12,
    ha="left",
    x=0.12,
)
# Horizontal y-axis title, faded
ax.set_title(
    title,
    loc="left",
    size=10,
    alpha=fade_alpha,
)
ax.set_xlabel("")
ax.set_ylabel("")
# remove chart clutter
for key, spine in ax.spines.items():
    spine.set_visible(False)
ax.tick_params(axis="y", which="both", length=0)
ax.tick_params(axis="x", which="both", color=[1, 0, 0, fade_alpha])
# Format the date axis to be prettier.
ax.xaxis.set_major_formatter(mdates.DateFormatter("%d %b"))
ax.xaxis.set_minor_locator(mdates.DayLocator())
ax.xaxis.set_major_locator(mdates.AutoDateLocator(interval_multiples=False))
# for time series, tick marks on the right help give a sense of right-ward motion
ax.yaxis.tick_right()
ax.grid(which="major", axis="y", lw=0.2)
ax.set_ylim(0, None)
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m~/opt/anaconda3/lib/python3.7/site-packages/IPython/core/formatters.py[0m in [0;36m__call__[0;34m(self, obj)[0m
[1;32m    339[0m                 [0;32mpass[0m[0;34m[0m[0;34m[0m[0m
[1;32m    340[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 341[0;31m                 [0;32mreturn[0m [0mprinter[0m[0;34m([0m[0mobj[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    342[0m             [0;31m# Finally look for special method names[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    343[0m             [0mmethod[0m [0;34m=[0m [0mget_real_method[0m[0;34m([0m[0mobj[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mprint_method[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py[0m in [0;36m<lambda>[0;34m(fig)[0m
[1;32m    251[0m [0;34m[0m[0m
[1;32m    252[0m     [0;32mif[0m [0;34m'png'[0m [0;32min[0m [0mformats[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 253[0;31m         [0mpng_formatter[0m[0;34m.[0m[0mfor_type[0m[0;34m([0m[0mFigure[0m[0;34m,[0m [0;32mlambda[0m [0mfig[0m[0;34m:[0m [0mprint_figure[0m[0;34m([0m[0mfig[0m[0;34m,[0m [0;34m'png'[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    254[0m     [0;32mif[0m [0;34m'retina'[0m [0;32min[0m [0mformats[0m [0;32mor[0m [0;34m'png2x'[0m [0;32min[0m [0mformats[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    255[0m         [0mpng_formatter[0m[0;34m.[0m[0mfor_type[0m[0;34m([0m[0mFigure[0m[0;34m,[0m [0;32mlambda[0m [0mfig[0m[0;34m:[0m [0mretina_figure[0m[0;34m([0m[0mfig[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py[0m in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, **kwargs)[0m
[1;32m    135[0m         [0mFigureCanvasBase[0m[0;34m([0m[0mfig[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    136[0m [0;34m[0m[0m
[0;32m--> 137[0;31m     [0mfig[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mprint_figure[0m[0;34m([0m[0mbytes_io[0m[0;34m,[0m [0;34m**[0m[0mkw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    138[0m     [0mdata[0m [0;34m=[0m [0mbytes_io[0m[0;34m.[0m[0mgetvalue[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    139[0m     [0;32mif[0m [0mfmt[0m [0;34m==[0m [0;34m'svg'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py[0m in [0;36mprint_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2191[0m                            else suppress())
[1;32m   2192[0m                     [0;32mwith[0m [0mctx[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2193[0;31m                         [0mself[0m[0;34m.[0m[0mfigure[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2194[0m [0;34m[0m[0m
[1;32m   2195[0m                     bbox_inches = self.figure.get_tightbbox(

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py[0m in [0;36mdraw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     39[0m                 [0mrenderer[0m[0;34m.[0m[0mstart_filter[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     40[0m [0;34m[0m[0m
[0;32m---> 41[0;31m             [0;32mreturn[0m [0mdraw[0m[0;34m([0m[0martist[0m[0;34m,[0m [0mrenderer[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     42[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     43[0m             [0;32mif[0m [0martist[0m[0;34m.[0m[0mget_agg_filter[0m[0;34m([0m[0;34m)[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py[0m in [0;36mdraw[0;34m(self, renderer)[0m
[1;32m   1862[0m             [0mself[0m[0;34m.[0m[0mpatch[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1863[0m             mimage._draw_list_compositing_images(
[0;32m-> 1864[0;31m                 renderer, self, artists, self.suppressComposite)
[0m[1;32m   1865[0m [0;34m[0m[0m
[1;32m   1866[0m             [0mrenderer[0m[0;34m.[0m[0mclose_group[0m[0;34m([0m[0;34m'figure'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/image.py[0m in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    129[0m     [0;32mif[0m [0mnot_composite[0m [0;32mor[0m [0;32mnot[0m [0mhas_images[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    130[0m         [0;32mfor[0m [0ma[0m [0;32min[0m [0martists[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 131[0;31m             [0ma[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    132[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    133[0m         [0;31m# Composite any adjacent images together[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py[0m in [0;36mdraw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     39[0m                 [0mrenderer[0m[0;34m.[0m[0mstart_filter[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     40[0m [0;34m[0m[0m
[0;32m---> 41[0;31m             [0;32mreturn[0m [0mdraw[0m[0;34m([0m[0martist[0m[0;34m,[0m [0mrenderer[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     42[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     43[0m             [0;32mif[0m [0martist[0m[0;34m.[0m[0mget_agg_filter[0m[0;34m([0m[0;34m)[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py[0m in [0;36mwrapper[0;34m(*inner_args, **inner_kwargs)[0m
[1;32m    409[0m                          [0;32melse[0m [0mdeprecation_addendum[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    410[0m                 **kwargs)
[0;32m--> 411[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0minner_args[0m[0;34m,[0m [0;34m**[0m[0minner_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    412[0m [0;34m[0m[0m
[1;32m    413[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36mdraw[0;34m(self, renderer, inframe)[0m
[1;32m   2745[0m             [0mrenderer[0m[0;34m.[0m[0mstop_rasterizing[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2746[0m [0;34m[0m[0m
[0;32m-> 2747[0;31m         [0mmimage[0m[0;34m.[0m[0m_draw_list_compositing_images[0m[0;34m([0m[0mrenderer[0m[0;34m,[0m [0mself[0m[0;34m,[0m [0martists[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2748[0m [0;34m[0m[0m
[1;32m   2749[0m         [0mrenderer[0m[0;34m.[0m[0mclose_group[0m[0;34m([0m[0;34m'axes'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/image.py[0m in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    129[0m     [0;32mif[0m [0mnot_composite[0m [0;32mor[0m [0;32mnot[0m [0mhas_images[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    130[0m         [0;32mfor[0m [0ma[0m [0;32min[0m [0martists[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 131[0;31m             [0ma[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    132[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    133[0m         [0;31m# Composite any adjacent images together[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py[0m in [0;36mdraw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     39[0m                 [0mrenderer[0m[0;34m.[0m[0mstart_filter[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     40[0m [0;34m[0m[0m
[0;32m---> 41[0;31m             [0;32mreturn[0m [0mdraw[0m[0;34m([0m[0martist[0m[0;34m,[0m [0mrenderer[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     42[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     43[0m             [0;32mif[0m [0martist[0m[0;34m.[0m[0mget_agg_filter[0m[0;34m([0m[0;34m)[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py[0m in [0;36mdraw[0;34m(self, renderer)[0m
[1;32m   1890[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mget_visible[0m[0;34m([0m[0;34m)[0m [0;32mor[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_check_xy[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1891[0m             [0;32mreturn[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1892[0;31m         [0mself[0m[0;34m.[0m[0mupdate_positions[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1893[0m         [0mself[0m[0;34m.[0m[0mupdate_bbox_position_size[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1894[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0marrow_patch[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m   [0;31m# FancyArrowPatch[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py[0m in [0;36mupdate_positions[0;34m(self, renderer)[0m
[1;32m   1812[0m         [0mUpdate[0m [0mthe[0m [0mpixel[0m [0mpositions[0m [0mof[0m [0mthe[0m [0mannotation[0m [0mtext[0m [0;32mand[0m [0mthe[0m [0marrow[0m [0mpatch[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1813[0m         """
[0;32m-> 1814[0;31m         [0mx1[0m[0;34m,[0m [0my1[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_position_xy[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m  [0;31m# Annotated position.[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1815[0m         [0;31m# generate transformation,[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1816[0m         [0mself[0m[0;34m.[0m[0mset_transform[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_get_xy_transform[0m[0;34m([0m[0mrenderer[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0manncoords[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py[0m in [0;36m_get_position_xy[0;34m(self, renderer)[0m
[1;32m   1476[0m         [0;34m"""Return the pixel position of the annotated point."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1477[0m         [0mx[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mxy[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1478[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_get_xy[0m[0;34m([0m[0mrenderer[0m[0;34m,[0m [0mx[0m[0;34m,[0m [0my[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mxycoords[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1479[0m [0;34m[0m[0m
[1;32m   1480[0m     [0;32mdef[0m [0m_check_xy[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mrenderer[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py[0m in [0;36m_get_xy[0;34m(self, renderer, x, y, s)[0m
[1;32m   1347[0m         [0;32mif[0m [0ms2[0m [0;34m==[0m [0;34m'data'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1348[0m             [0my[0m [0;34m=[0m [0mfloat[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mconvert_yunits[0m[0;34m([0m[0my[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1349[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_get_xy_transform[0m[0;34m([0m[0mrenderer[0m[0;34m,[0m [0ms[0m[0;34m)[0m[0;34m.[0m[0mtransform[0m[0;34m([0m[0;34m([0m[0mx[0m[0;34m,[0m [0my[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1350[0m [0;34m[0m[0m
[1;32m   1351[0m     [0;32mdef[0m [0m_get_xy_transform[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mrenderer[0m[0;34m,[0m [0ms[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py[0m in [0;36mtransform[0;34m(self, values)[0m
[1;32m   1420[0m [0;34m[0m[0m
[1;32m   1421[0m         [0;31m# Transform the values[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1422[0;31m         [0mres[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mtransform_affine[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mtransform_non_affine[0m[0;34m([0m[0mvalues[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1423[0m [0;34m[0m[0m
[1;32m   1424[0m         [0;31m# Convert the result back to the shape of the input values.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py[0m in [0;36mtransform_affine[0;34m(self, values)[0m
[1;32m   1458[0m             [0mshape[0m [0;34m([0m[0mN[0m [0mx[0m [0;34m:[0m[0mattr[0m[0;34m:[0m[0;31m`[0m[0moutput_dims[0m[0;31m`[0m[0;34m)[0m[0;34m,[0m [0mdepending[0m [0mon[0m [0mthe[0m [0minput[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1459[0m         """
[0;32m-> 1460[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mget_affine[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mtransform[0m[0;34m([0m[0mvalues[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1461[0m [0;34m[0m[0m
[1;32m   1462[0m     [0;32mdef[0m [0mtransform_non_affine[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mvalues[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py[0m in [0;36mtransform[0;34m(self, values)[0m
[1;32m   1715[0m     [0;32mdef[0m [0mtransform[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mvalues[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1716[0m         [0;31m# docstring inherited[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1717[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mtransform_affine[0m[0;34m([0m[0mvalues[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1718[0m [0;34m[0m[0m
[1;32m   1719[0m     [0;32mdef[0m [0mtransform_affine[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mvalues[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py[0m in [0;36mtransform_affine[0;34m(self, points)[0m
[1;32m   1797[0m             [0mtpoints[0m [0;34m=[0m [0maffine_transform[0m[0;34m([0m[0mpoints[0m[0;34m.[0m[0mdata[0m[0;34m,[0m [0mmtx[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1798[0m             [0;32mreturn[0m [0mnp[0m[0;34m.[0m[0mma[0m[0;34m.[0m[0mMaskedArray[0m[0;34m([0m[0mtpoints[0m[0;34m,[0m [0mmask[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mma[0m[0;34m.[0m[0mgetmask[0m[0;34m([0m[0mpoints[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1799[0;31m         [0;32mreturn[0m [0maffine_transform[0m[0;34m([0m[0mpoints[0m[0;34m,[0m [0mmtx[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1800[0m [0;34m[0m[0m
[1;32m   1801[0m     [0;32mif[0m [0mDEBUG[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: Cannot cast array data from dtype('O') to dtype('float64') according to the rule 'safe'
TypeError: Cannot cast array data from dtype('O') to dtype('float64') according to the rule 'safe'

